<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.entando</groupId>
    <artifactId>test1</artifactId>
    <packaging>war</packaging>
    <version>5.1.0-SNAPSHOT</version>
    <name>test1</name>
    <url>http://maven.apache.org/</url>
    <repositories>
        <repository>
            <id>entando-snapshot-repository</id>
            <url>https://repository.entando.org/repository/maven-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>snapshot-repository</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <properties>
        <entando.version>5.1.0-SNAPSHOT</entando.version>
        <spring.version>5.0.8.RELEASE</spring.version>
        <struts2.version>2.5.17</struts2.version>
        <jetty.version>9.4.8.v20180619</jetty.version>
        <docker.host.address>172.17.0.1</docker.host.address>
        <env.db.environment>production</env.db.environment>
        <entando.engine.web.context>${project.build.finalName}</entando.engine.web.context>
        <skipDocker>true</skipDocker>
        <skipSmokeTests>true</skipSmokeTests>
        <!--Uncomment if you want to access AppBuilder from your browser-->
        <!--<appbuilder.port>5000</appbuilder.port>-->
        <!--Uncomment if you want to connect to PostgreSQL locally-->
        <db.server.local.port>5432</db.server.local.port>
        <!--Uncomment if you want to connect to MySQL locally-->
        <!--<db.server.local.port>3306</db.server.local.port>-->
    </properties>
    <profiles>
        <profile>
            <id>smoke-test</id>
            <properties>
                <!--Image configuration -->
                <skipDocker>false</skipDocker>
                <skipAppBuilderImage>true</skipAppBuilderImage>
                <skipServerImage>true</skipServerImage>
                <skipDatabaseImage>true</skipDatabaseImage>
                <skipSmokeTests>false</skipSmokeTests>
            </properties>
        </profile>
        <profile>
            <id>jetty</id>
            <properties>
                <!--Image configuration -->
                <skipDocker>false</skipDocker>
                <skipAppBuilderImage>true</skipAppBuilderImage>
                
                <entando.engine.address>localhost</entando.engine.address>
                <app.builder.depends.on></app.builder.depends.on>

                <skipServerImage>true</skipServerImage>
                <jboss.home.in.image>none</jboss.home.in.image>
                <entando.engine.port>8080</entando.engine.port>
		<server.base.image>none</server.base.image>

                <derby.base.folder>${project.build.directory}/derby/${env.db.environment}</derby.base.folder>
            </properties>
        </profile>
        <profile>
            <id>eap</id>
            <properties>
                <!--Image configuration -->
                <skipDocker>false</skipDocker>
                <skipAppBuilderImage>false</skipAppBuilderImage>
                
                <entando.engine.address>${docker.host.address}</entando.engine.address>
                <app.builder.depends.on>${project.artifactId}-engine</app.builder.depends.on>

                <skipServerImage>false</skipServerImage>
                <jboss.home.in.image>/opt/eap</jboss.home.in.image>
                <server.base.image>entando-eap71-clustered-base</server.base.image>

                <derby.base.folder>/entando-data/databases</derby.base.folder>

            </properties>
        </profile>
        <profile>
            <id>wildfly</id>
            <properties>
                <!--Image configuration -->
                <skipDocker>false</skipDocker>
                <skipAppBuilderImage>false</skipAppBuilderImage>
                
                <entando.engine.address>${docker.host.address}</entando.engine.address>
                <app.builder.depends.on>${project.artifactId}-engine</app.builder.depends.on>

                <skipServerImage>false</skipServerImage>
                <jboss.home.in.image>/wildfly</jboss.home.in.image>
                <server.base.image>entando-wildfly12-base</server.base.image>

                <derby.base.folder>/entando-data/databases</derby.base.folder>
            </properties>
        </profile>
        <profile>
            <id>derby</id>
            <properties>
                <skipDatabaseImage>true</skipDatabaseImage>
                <!--DB connection properties-->
                <portdb.database>portdb</portdb.database>
                <portdb.url>jdbc:derby:${derby.base.folder}/${portdb.database};create=true</portdb.url>
                <portdb.username>agile</portdb.username>
                <portdb.password>agile</portdb.password>
                <portdb.driverClassName>org.apache.derby.jdbc.EmbeddedDriver</portdb.driverClassName>
                <portdb.jndi>java:/jdbc/portDataSource</portdb.jndi>

                <servdb.database>servdb</servdb.database>
                <servdb.url>jdbc:derby:${derby.base.folder}/${servdb.database};create=true</servdb.url>
                <servdb.username>agile</servdb.username>
                <servdb.password>agile</servdb.password>
                <servdb.driverClassName>org.apache.derby.jdbc.EmbeddedDriver</servdb.driverClassName>
                <servdb.jndi>java:/jdbc/servDataSource</servdb.jndi>

                <!-- DB work required from the server image. Create the template Derby databases -->
                <server.init.command>$STI_SCRIPTS_PATH/init-derby-from-war.sh  --war-file=${jboss.home.in.image}/standalone/deployments/${project.build.finalName}.war --jetty-version=${jetty.version}
                </server.init.command>
            </properties>
        </profile>
        <profile>
            <id>postgresql</id>
            <properties>
                <skipDatabaseImage>false</skipDatabaseImage>
                <db.base.image>entando-postgresql95-base</db.base.image>
                <db.init.command>$STI_SCRIPTS_PATH/init-postgresql-from-war.sh  --war-file=/tmp/${project.build.finalName}.war --jetty-version=${jetty.version}
                </db.init.command>
                <db.volume.mount.path>/var/lib/pgsql/data</db.volume.mount.path>
                <db.server.port>5432</db.server.port>


                <portdb.database>portdb</portdb.database>
                <portdb.url>jdbc:postgresql://${docker.host.address}:${db.server.local.port}/${portdb.database}</portdb.url>
                <portdb.username>portdbuser</portdb.username>
                <portdb.password>portdb123</portdb.password>
                <portdb.jndi>java:/jdbc/portDataSource</portdb.jndi>
                <portdb.driverClassName>org.postgresql.Driver</portdb.driverClassName>

                <servdb.database>servdb</servdb.database>
                <servdb.url>jdbc:postgresql://${docker.host.address}:${db.server.local.port}/${servdb.database}</servdb.url>
                <servdb.username>servdbuser</servdb.username>
                <servdb.password>servdb123</servdb.password>
                <servdb.jndi>java:/jdbc/servDataSource</servdb.jndi>
                <servdb.driverClassName>org.postgresql.Driver</servdb.driverClassName>

                <!-- No DB work required from the server image. Just set the build_id -->
                <server.init.command>echo $(date +%s) > /entando-data-templates/build_id</server.init.command>
            </properties>
        </profile>
        <profile>
            <id>mysql</id>
            <properties>
                <skipDatabaseImage>false</skipDatabaseImage>
                <db.base.image>entando-mysql57-base</db.base.image>
                <db.init.command>$STI_SCRIPTS_PATH/init-mysql-from-war.sh --war-file=/tmp/${project.build.finalName}.war --jetty-version=${jetty.version}
                </db.init.command>
                <db.volume.mount.path>/var/lib/mysql/data</db.volume.mount.path>
                <db.server.port>3306</db.server.port>

                <portdb.database>portdb</portdb.database>
                <portdb.url>jdbc:mysql://${docker.host.address}:${db.server.local.port}/${portdb.database}</portdb.url>
                <portdb.username>portdbuser</portdb.username>
                <portdb.password>portdb123</portdb.password>
                <portdb.jndi>java:/jdbc/portDataSource</portdb.jndi>
                <portdb.driverClassName>com.mysql.jdbc.Driver</portdb.driverClassName>

                <servdb.database>servdb</servdb.database>
                <servdb.url>jdbc:mysql://${docker.host.address}:${db.server.local.port}/${servdb.database}</servdb.url>
                <servdb.username>servdbuser</servdb.username>
                <servdb.password>servdb123</servdb.password>
                <servdb.jndi>java:/jdbc/servDataSource</servdb.jndi>
                <servdb.driverClassName>com.mysql.jdbc.Driver</servdb.driverClassName>

                <!-- No DB work required from the server image. Just set the build_id -->
                <server.init.command>echo $(date +%s) > /entando-data-templates/build_id</server.init.command>
            </properties>

        </profile>
    </profiles>

    <build>
        <finalName>test1</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/conf</directory>
                <filtering>true</filtering>
                <targetPath>WEB-INF/conf</targetPath>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.xsd</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/tld</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>**/*.tld</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- Fabric8 docker plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.26.1</version>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <skip>${skipDocker}</skip>
                    <startParallel>true</startParallel>
                    <portPropertyFile>${project.build.directory}/ports.properties</portPropertyFile>
                    <verbose>true</verbose>

                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <volumes>
                        <volume>
                            <!--Volume for JBoss and Derby data-->
                            <name>${project.artifactId}-entando-data</name>
                            <driver>local</driver>
                        </volume>
                        <volume>
                            <!--Volume for PostgreSQL/MySQL data-->
                            <name>${project.artifactId}-entando-db-data</name>
                            <driver>local</driver>
                        </volume>
                    </volumes>
                    <images>
                        <image>
                            <name>entandosamples/${project.artifactId}-db</name>
                            <alias>${project.artifactId}-dbms</alias>
                            <build>
                                <skip>${skipDatabaseImage}</skip>
                                <from>entando/${db.base.image}:${entando.version}</from>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                    <targetDir>/tmp</targetDir>
                                </assembly>
                                <env>
                                    <PORTDB_USERNAME>${portdb.username}</PORTDB_USERNAME>
                                    <PORTDB_PASSWORD>${portdb.password}</PORTDB_PASSWORD>
                                    <PORTDB_DATABASE>${portdb.database}</PORTDB_DATABASE>
                                    <PORTDB_JNDI>${portdb.jndi}</PORTDB_JNDI>
                                    <SERVDB_USERNAME>${servdb.username}</SERVDB_USERNAME>
                                    <SERVDB_PASSWORD>${servdb.password}</SERVDB_PASSWORD>
                                    <SERVDB_DATABASE>${servdb.database}</SERVDB_DATABASE>
                                    <SERVDB_JNDI>${servdb.jndi}</SERVDB_JNDI>
                                    <DB_ENVIRONMENT>${env.db.environment}</DB_ENVIRONMENT>
                                </env>
                                <runCmds>
                                    <run>${db.init.command}</run>
                                </runCmds>
                            </build>
                            <run>
                                <skip>${skipDatabaseImage}</skip>
                                <namingStrategy>alias</namingStrategy>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}-network</name>
                                    <alias>${project.artifactId}-dbms</alias>
                                </network>
                                <ports>
                                    <port>+docker.host.address:db.server.local.port:${db.server.port}</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${project.artifactId}-entando-db-data:${db.volume.mount.path}</volume>
                                    </bind>
                                </volumes>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>dbms:</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <name>entandosamples/${project.artifactId}:${project.version}</name>
                            <alias>${project.artifactId}-engine</alias>
                            <build>
                                <from>entando/${server.base.image}:${entando.version}</from>
                                <skip>${skipServerImage}</skip>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                    <targetDir>${jboss.home.in.image}/standalone/deployments</targetDir>
                                </assembly>
                                <nocache>true</nocache>
                                <runCmds>
                                    <run>${server.init.command}</run>
                                </runCmds>
                            </build>
                            <run>
                                <skip>${skipServerImage}</skip>
                                <namingStrategy>alias</namingStrategy>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}-network</name>
                                    <alias>${project.artifactId}-engine</alias>
                                </network>
                                <volumes>
                                    <bind>
                                        <volume>${project.artifactId}-entando-data:/entando-data</volume>
                                    </bind>
                                </volumes>
                                <env>
                                    <PORTDB_USERNAME>${portdb.username}</PORTDB_USERNAME>
                                    <PORTDB_PASSWORD>${portdb.password}</PORTDB_PASSWORD>
                                    <PORTDB_DATABASE>${portdb.database}</PORTDB_DATABASE>
                                    <PORTDB_URL>${portdb.url}</PORTDB_URL>
                                    <PORTDB_DATABASE>${portdb.database}</PORTDB_DATABASE>
                                    <PORTDB_JNDI>${portdb.jndi}</PORTDB_JNDI>
                                    <SERVDB_USERNAME>${servdb.username}</SERVDB_USERNAME>
                                    <SERVDB_PASSWORD>${servdb.password}</SERVDB_PASSWORD>
                                    <SERVDB_DATABASE>${servdb.database}</SERVDB_DATABASE>
                                    <SERVDB_URL>${servdb.url}</SERVDB_URL>
                                    <SERVDB_DATABASE>${servdb.database}</SERVDB_DATABASE>
                                    <SERVDB_JNDI>${servdb.jndi}</SERVDB_JNDI>
                                    <DB_ENVIRONMENT>${env.db.environment}</DB_ENVIRONMENT>
                                    <DB_STARTUP_CHECK>false</DB_STARTUP_CHECK>
                                </env>
                                <dependsOn>
                                    <container>${project.artifactId}-dbms</container>
                                </dependsOn>
                                <ports>
                                    <port>+docker.host.address:entando.engine.port:8080</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>
                                            http://${docker.host.address}:${entando.engine.port}/${project.artifactId}
                                        </url>
                                    </http>
                                    <time>90000</time>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>server:</prefix>
                                    <color>blue</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <name>entando/appbuilder:${entando.version}</name>
                            <run>
                                <skip>${skipAppBuilderImage}</skip>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}-network</name>
                                    <alias>appbuilder</alias>
                                </network>
                                <ports>
                                    <port>+docker.host.address:appbuilder.port:5000</port>
                                </ports>
                                <dependsOn>
                                    <container>${app.builder.depends.on}</container>
                                </dependsOn>
                                <env>
                                    <DOMAIN>
                                        http://${entando.engine.address}:${entando.engine.port}/${project.artifactId}
                                    </DOMAIN>
                                </env>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${appbuilder.port}</url>
                                    </http>
                                    <time>90000</time>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>appbuilder:</prefix>
                                    <color>green</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <name>entando/entando-smoke-tests:${entando.version}</name>
                            <run>
                                <skip>${skipSmokeTests}</skip>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}-network</name>
                                    <alias>smoketests</alias>
                                </network>
                                <dependsOn>
                                    <container>${app.builder.depends.on}</container>
                                </dependsOn>
                                <cmd> mvn verify -Dtest=org.entando.selenium.smoketests.STAddTestUserTest</cmd>
                                <env>
                                    <ENTANDO_APPBUILDER_URL>
                                        http://appbuilder:5000
                                    </ENTANDO_APPBUILDER_URL>
                                </env>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>smoke-tests:</prefix>
                                    <color>red</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <!-- End of Fabric8 docker plugin -->

            <!-- mvn jetty:run (with hot-redeploy) -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <scanIntervalSeconds>5</scanIntervalSeconds>
                    <webApp>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}
                            </resourcesAsCSV>
                        </baseResource>
                        <defaultsDescriptor>${basedir}/src/main/jetty/webdefault.xml</defaultsDescriptor>
                        <contextPath>/${project.artifactId}</contextPath>
                        <jettyEnvXml>${project.basedir}/src/main/jetty/jetty-env.xml</jettyEnvXml>
                    </webApp>
                    <systemProperties>
                        <systemProperty>
                            <name>entando.version</name>
                            <value>${entando.version}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>db.startup.check</name>
                            <value>true</value>
                        </systemProperty>
                        <systemProperty>
                            <name>db.restore.enabled</name>
                            <value>true</value>
                        </systemProperty>
                        <systemProperty>
                            <name>db.environment</name>
                            <value>production</value>
                        </systemProperty>
                        <systemProperty>
                            <name>logFilePrefix</name>
                            <value>${project.build.directory}/logs/</value>
                        </systemProperty>
                        <systemProperty>
                            <name>resourceDiskRootFolder</name>
                            <value>${project.basedir}/src/main/webapp/resources/</value>
                        </systemProperty>
                        <systemProperty>
                            <name>protectedResourceDiskRootFolder</name>
                            <value>${project.basedir}/src/main/webapp/protected/</value>
                        </systemProperty>
                        <systemProperty>
                            <name>indexDiskRootFolder</name>
                            <value>${project.build.directory}/indices</value>
                        </systemProperty>
                        <systemProperty>
                            <name>portDataSourceClassName</name>
                            <value>${portdb.driverClassName}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>servDataSourceClassName</name>
                            <value>${servdb.driverClassName}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>portdb.url</name>
                            <value>${portdb.url}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>portdb.jndi</name>
                            <value>${portdb.jndi}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>portdb.username</name>
                            <value>${portdb.username}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>portdb.password</name>
                            <value>${portdb.password}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>servdb.jndi</name>
                            <value>${servdb.jndi}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>servdb.url</name>
                            <value>${servdb.url}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>servdb.username</name>
                            <value>${servdb.username}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>servdb.password</name>
                            <value>${servdb.password}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901.jdbc4</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.18</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derby</artifactId>
                        <version>10.9.1.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derbyclient</artifactId>
                        <version>10.9.1.0</version>
                    </dependency>
                    <dependency>
                        <groupId>commons-dbcp</groupId>
                        <artifactId>commons-dbcp</artifactId>
                        <version>1.2.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0-beta-1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.0.0</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version><!--$NO-MVN-MAN-VER$ -->
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-archiver</artifactId>
                        <version>2.4.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>unpack-dependencies-jsp-frontend-core-webapp</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <skip>${core-webapp-cant-overwrite}</skip>
                            <verbose>true</verbose>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>false</overWriteIfNewer>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.entando.entando</groupId>
                                    <artifactId>entando-admin-console</artifactId>
                                    <type>war</type>
                                    <outputDirectory>src/main/webapp</outputDirectory>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>WEB-INF/aps/jsp/internalservlet/api/**/*.jsp</includes>
                        </configuration>
                    </execution>
                    <!--					<execution>
                            <id>unpack-dependencies-bootstrap</id>
                            <phase>prepare-package</phase>
                            <goals>
                                    <goal>unpack</goal>
                            </goals>
                            <configuration>
                                    <verbose>true</verbose>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>false</overWriteSnapshots>
                                    <overWriteIfNewer>false</overWriteIfNewer>
                                    <artifactItems>
                                            <artifactItem>
                                                    <groupId>org.entando.entando.bundles.misc</groupId>
                                                    <artifactId>entando-misc-bootstrap</artifactId>
                                                    <type>war</type>
                                                    <outputDirectory>${project.build.directory}/entando-misc-bootstrap</outputDirectory>
                                                    <overWrite>false</overWrite>
                                            </artifactItem>
                                    </artifactItems>
                                    <includes>resources/static/entando-misc-bootstrap/bootstrap/bootstrap/**</includes>
                            </configuration>
                    </execution>-->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/tld</directory>
                            <targetPath>WEB-INF/tld</targetPath>
                            <includes>
                                <include>**/*.tld</include>
                            </includes>
                            <filtering>false</filtering>
                        </resource>
                        <resource>
                            <directory>src/main/conf</directory>
                            <targetPath>WEB-INF/conf</targetPath>
                            <includes>
                                <include>**/*.properties</include>
                            </includes>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>

                    <filters>
                        <filter>${*}</filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version><!--$NO-MVN-MAN-VER$ -->
                <executions>
                    <execution>
                        <id>decide-if-core-webapp-can-overwrite</id>
                        <phase>validate</phase>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath"/>
                                <if>
                                    <available file="src/main/webapp/WEB-INF/aps/jsp/internalservlet/api" type="dir"/>
                                    <then>
                                        <property name="core-webapp-cant-overwrite" value="true"/>
                                    </then>
                                </if>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>20020829</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>1.1.3</version>
                <configuration>
                    <name>${project.artifactId}</name>
                    <version>${project.version}-${maven.build.timestamp}</version>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-liverebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate-liverebel-xml</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <argLine>-Xms512m -Xmx1024m</argLine>
                    <testFailureIgnore>false</testFailureIgnore>
                    <excludes>
                        <exclude>**/*BaseTestCase*</exclude>
                    </excludes>
                    <includes>
                        <include>**/AllTests.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <excludeDefaultDirectories>true</excludeDefaultDirectories>
                        <followSymlinks>true</followSymlinks><!-- performance -->
                        <filesets>
                            <fileset>
                                <directory>${project.build.directory}</directory>
                                <excludes>
                                    <exclude>**/derby/production/**</exclude>
                                </excludes>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                unpack-dependencies
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute></execute>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.mojo
                                        </groupId>
                                        <artifactId>
                                            sql-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.5,)
                                        </versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-antrun-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.6,)
                                        </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.entando.entando.bundles.pages</groupId>
            <artifactId>entando-page-inspinia</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.entando.entando.bundles.pages</groupId>
            <artifactId>entando-page-inspinia_BPM</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-engine</artifactId>
            <version>${entando.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-engine</artifactId>
            <version>${entando.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-admin-console</artifactId>
            <version>${entando.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-admin-console</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-admin-console</artifactId>
            <version>${entando.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-portal-ui</artifactId>
            <version>${entando.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-portal-ui</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.entando.entando</groupId>
            <artifactId>entando-portal-ui</artifactId>
            <version>${entando.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.9.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.9.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.entando.entando.plugins</groupId>
            <artifactId>entando-plugin-jpkiebpm</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.entando.entando.plugins</groupId>
            <artifactId>entando-plugin-jpinfinispan</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
        </dependency>
	<dependency>
            <groupId>org.entando.entando.plugins</groupId>
            <artifactId>entando-plugin-jpdigital-exchange</artifactId>
            <version>${entando.version}</version>
            <type>war</type>
	</dependency>
        <!-- enable if you need to test Oracle DB connection with jetty -->
        <!--<dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>12.1.0.2</version>
        </dependency> -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
    </dependencies>
</project>
